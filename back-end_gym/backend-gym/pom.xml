<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.gymcoach</groupId>
	<artifactId>backend-gym</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>backend-gym</name>
	<description>Gym Coach App</description>
	<url/>
	<licenses>
		<license/>
		</licenses>
		<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>

		<!-- Base de données H2 - Pour les tests automatisés -->
		<dependency>
    		<groupId>com.h2database</groupId>
    		<artifactId>h2</artifactId>
    		<scope>runtime</scope>
  		</dependency>

		<!-- Connecter ton application à une base de données relationnelle via JPA - Java Persistence API  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Sert à intégrer MongoDB -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>

		<!-- Inclure le pilote JDBC de MySQL, c'est-à-dire le connecteur Java  -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Framework de sécurité de Spring - Login, mot de passe, JWT -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- Sert à transformer ton application Spring Boot en application web ou API REST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		
		<!-- écrire et exécuter des tests  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- tester les fonctionnalités de sécurité  -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Gérer l'authentification sécurisée avec des tokens -->
		<dependency>
  			<groupId>io.jsonwebtoken</groupId>
  			<artifactId>jjwt-api</artifactId>
  			<version>0.11.5</version>
		</dependency>

		<!-- Implémentation -->
		<dependency>
  			<groupId>io.jsonwebtoken</groupId>
  			<artifactId>jjwt-impl</artifactId>
  			<version>0.11.5</version>
  			<scope>runtime</scope>
		</dependency>

		<!-- Support Jackson pour JSON (runtime only) - Partie pour le chiffrement (Jackson) -->
  		<dependency>
    		<groupId>io.jsonwebtoken</groupId>
    		<artifactId>jjwt-jackson</artifactId>
    		<version>0.11.5</version>
    		<scope>runtime</scope>
  		</dependency>

		<!-- Lombok - réduire le dode répétitif - getters, setters... -->
		<dependency>
  			<groupId>org.projectlombok</groupId>
  			<artifactId>lombok</artifactId>
  			<version>1.18.32</version>
            <scope>provided</scope>
		</dependency>

		<!-- support des annotations de validation standard - @NotNull, @NotBlanck, @email, etc... -->
		<dependency>
    		<groupId>jakarta.validation</groupId>
    		<artifactId>jakarta.validation-api</artifactId>
    		<version>3.0.2</version>
		</dependency>

		<!-- L'implémentation par défaut de Jakarta Validation -->
		<dependency>
  			<groupId>org.springframework.boot</groupId>
  			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!--  L'envoi d'e-mails dans une application Spring Boot, via JavaMailSender-->
		<dependency>
  			<groupId>org.springframework.boot</groupId>
  			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- WebSocket pour la communication en temps réel -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
		<!--  Intégrer le plugin Spring Boot dans le cycle de build Maven-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
